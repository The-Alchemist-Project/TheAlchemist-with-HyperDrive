{"version":3,"sources":["../src/referral.ts","../src/idl.ts","../src/constant.ts","../src/utils.ts","../src/filter.ts"],"names":["PublicKey","TOKEN_PROGRAM_ID"],"mappings":"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","sourcesContent":["import { AnchorProvider, Program } from \"@coral-xyz/anchor\";\nimport { IDL, Referral } from \"./idl\";\nimport {\n  Connection,\n  PublicKey,\n  Transaction,\n  GetProgramAccountsFilter,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { Cluster, PROGRAM_ID_BY_CLUSTER } from \"./constant\";\nimport { getOrCreateATAInstruction } from \"./utils\";\nimport {\n  AccountLayout,\n  TOKEN_2022_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n} from \"@solana/spl-token\";\n\nexport interface InitializeProjectVariable {\n  adminPubKey: PublicKey;\n  basePubKey: PublicKey;\n  name: string;\n  defaultShareBps: number;\n}\n\nexport interface TransferProjectVariable {\n  newAdminPubKey: PublicKey;\n  projectPubKey: PublicKey;\n}\n\nexport interface InitializeReferralAccountVariable {\n  projectPubKey: PublicKey;\n  partnerPubKey: PublicKey;\n  payerPubKey: PublicKey;\n  referralAccountPubKey: PublicKey;\n}\n\nexport interface InitializeReferralAccountWithNameVariable {\n  projectPubKey: PublicKey;\n  partnerPubKey: PublicKey;\n  payerPubKey: PublicKey;\n  name: string;\n}\n\nexport interface TransferReferralAccountVariable {\n  newPartnerPubKey: PublicKey;\n  referralAccountPubKey: PublicKey;\n}\n\nexport interface GetReferralAccountPubkeyVariable {\n  projectPubKey: PublicKey;\n  name: string;\n}\n\nexport interface GetReferralTokenAccountPubkeyVariable {\n  referralAccountPubKey: PublicKey;\n  mint: PublicKey;\n}\n\nexport interface InitializeReferralTokenAccountVariable {\n  payerPubKey: PublicKey;\n  referralAccountPubKey: PublicKey;\n  mint: PublicKey;\n  tokenProgram: PublicKey;\n}\n\nexport interface ClaimVariable {\n  payerPubKey: PublicKey;\n  referralAccountPubKey: PublicKey;\n  mint: PublicKey;\n  tokenProgram: PublicKey;\n}\n\nexport const useReferral = (connection: Connection, cluster?: Cluster) => {\n  return new ReferralProvider(connection, cluster);\n};\n\nexport class ReferralProvider {\n  private program: Program<Referral>;\n  private connection: Connection;\n\n  constructor(connection: Connection, cluster: Cluster = \"mainnet-beta\") {\n    this.connection = connection;\n\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n\n    this.program = new Program(IDL, PROGRAM_ID_BY_CLUSTER[cluster], provider);\n  }\n\n  public async getProjects(filters: GetProgramAccountsFilter[] = []) {\n    return await this.program.account.project.all(filters);\n  }\n\n  public async getProject(pubkey: PublicKey) {\n    return await this.program.account.project.fetch(pubkey);\n  }\n\n  public async getReferralAccount(pubkey: PublicKey) {\n    return await this.program.account.referralAccount.fetch(pubkey);\n  }\n\n  public async getReferralAccounts(filters: GetProgramAccountsFilter[] = []) {\n    return await this.program.account.referralAccount.all(filters);\n  }\n\n  public getReferralAccountWithNamePubKey({\n    projectPubKey,\n    name,\n  }: GetReferralAccountPubkeyVariable) {\n    const [referralAccountPubKey] = PublicKey.findProgramAddressSync(\n      [Buffer.from(\"referral\"), projectPubKey.toBuffer(), Buffer.from(name)],\n      this.program.programId\n    );\n\n    return referralAccountPubKey;\n  }\n\n  public getReferralTokenAccountPubKey({\n    referralAccountPubKey,\n    mint,\n  }: GetReferralTokenAccountPubkeyVariable) {\n    const [referralTokenAccountPubKey] = PublicKey.findProgramAddressSync(\n      [\n        Buffer.from(\"referral_ata\"),\n        referralAccountPubKey.toBuffer(),\n        mint.toBuffer(),\n      ],\n      this.program.programId\n    );\n\n    return referralTokenAccountPubKey;\n  }\n\n  public async getReferralTokenAccounts(\n    referralAccountAddress: string\n  ): Promise<{\n    tokenAccounts: string[];\n    token2022Accounts: string[];\n  }> {\n    const referralAccount = await this.program.account.referralAccount.fetch(\n      new PublicKey(referralAccountAddress)\n    );\n\n    const [tokenAccounts, token2022Accounts] = await Promise.all(\n      [TOKEN_PROGRAM_ID, TOKEN_2022_PROGRAM_ID].map(async (programId) => {\n        const mintSet = new Set();\n        const tokenAccountSet = new Set();\n\n        // get all token accounts belong to project\n        const allTokenAccounts = await this.connection.getTokenAccountsByOwner(\n          referralAccount.project,\n          { programId }\n        );\n\n        // get unique mint and all token accounts\n        allTokenAccounts.value.map((tokenAccount) => {\n          const accountData = AccountLayout.decode(tokenAccount.account.data);\n\n          if (!mintSet.has(accountData.mint.toBase58())) {\n            mintSet.add(accountData.mint.toBase58());\n          }\n\n          tokenAccountSet.add(tokenAccount.pubkey.toBase58());\n        });\n\n        // loop through mint and find token account belong to referral account\n        return Array.from(mintSet)\n          .map((mint) => {\n            const address = this.getReferralTokenAccountPubKey({\n              referralAccountPubKey: new PublicKey(referralAccountAddress),\n              mint: new PublicKey(mint),\n            });\n\n            if (tokenAccountSet.has(address.toBase58()))\n              return address.toBase58();\n\n            return null;\n          })\n          .filter(Boolean);\n      })\n    );\n\n    return { tokenAccounts, token2022Accounts };\n  }\n\n  public async initializeProject({\n    basePubKey,\n    adminPubKey,\n    name,\n    defaultShareBps,\n  }: InitializeProjectVariable): Promise<Transaction> {\n    const [projectPubKey] = PublicKey.findProgramAddressSync(\n      [Buffer.from(\"project\"), basePubKey.toBuffer()],\n      this.program.programId\n    );\n\n    return await this.program.methods\n      .initializeProject({ name, defaultShareBps })\n      .accounts({\n        admin: adminPubKey,\n        project: projectPubKey,\n        base: basePubKey,\n      })\n      .transaction();\n  }\n\n  public async transferProject({\n    newAdminPubKey,\n    projectPubKey,\n  }: TransferProjectVariable): Promise<Transaction> {\n    const project = await this.program.account.project.fetch(projectPubKey);\n\n    return await this.program.methods\n      .transferProject({})\n      .accounts({\n        admin: project.admin,\n        project: projectPubKey,\n        newAdmin: newAdminPubKey,\n      })\n      .transaction();\n  }\n\n  public async initializeReferralAccount({\n    projectPubKey,\n    partnerPubKey,\n    payerPubKey,\n    referralAccountPubKey,\n  }: InitializeReferralAccountVariable): Promise<Transaction> {\n    return await this.program.methods\n      .initializeReferralAccount({})\n      .accounts({\n        project: projectPubKey,\n        partner: partnerPubKey,\n        referralAccount: referralAccountPubKey,\n        payer: payerPubKey,\n      })\n      .transaction();\n  }\n\n  public async initializeReferralAccountWithName({\n    projectPubKey,\n    partnerPubKey,\n    payerPubKey,\n    name,\n  }: InitializeReferralAccountWithNameVariable): Promise<{\n    tx: Transaction;\n    referralAccountPubKey: PublicKey;\n  }> {\n    const referralAccountPubKey = await this.getReferralAccountWithNamePubKey({\n      projectPubKey,\n      name,\n    });\n\n    const tx = await this.program.methods\n      .initializeReferralAccountWithName({ name })\n      .accounts({\n        project: projectPubKey,\n        partner: partnerPubKey,\n        referralAccount: referralAccountPubKey,\n        payer: payerPubKey,\n      })\n      .transaction();\n\n    return { tx, referralAccountPubKey };\n  }\n\n  public async transferReferralAccount({\n    newPartnerPubKey,\n    referralAccountPubKey,\n  }: TransferReferralAccountVariable): Promise<Transaction> {\n    const referralAccount = await this.program.account.referralAccount.fetch(\n      referralAccountPubKey\n    );\n\n    return await this.program.methods\n      .transferReferralAccount({})\n      .accounts({\n        partner: referralAccount.partner,\n        newPartner: newPartnerPubKey,\n        referralAccount: referralAccountPubKey,\n      })\n      .transaction();\n  }\n\n  public async initializeReferralTokenAccount({\n    payerPubKey,\n    referralAccountPubKey,\n    mint,\n    tokenProgram = TOKEN_PROGRAM_ID,\n  }: InitializeReferralTokenAccountVariable): Promise<{\n    tx: Transaction;\n    referralTokenAccountPubKey: PublicKey;\n  }> {\n    const referralAccount = await this.program.account.referralAccount.fetch(\n      referralAccountPubKey\n    );\n\n    const referralTokenAccountPubKey = await this.getReferralTokenAccountPubKey(\n      {\n        referralAccountPubKey,\n        mint,\n      }\n    );\n\n    const tx = await this.program.methods\n      .initializeReferralTokenAccount()\n      .accounts({\n        payer: payerPubKey,\n        project: referralAccount.project,\n        referralAccount: referralAccountPubKey,\n        referralTokenAccount: referralTokenAccountPubKey,\n        mint,\n        tokenProgram,\n      })\n      .transaction();\n\n    return { tx, referralTokenAccountPubKey };\n  }\n\n  public async claim({\n    payerPubKey,\n    referralAccountPubKey,\n    mint,\n    tokenProgram = TOKEN_PROGRAM_ID,\n  }: ClaimVariable): Promise<Transaction> {\n    const referralAccount = await this.program.account.referralAccount.fetch(\n      referralAccountPubKey\n    );\n    const project = await this.program.account.project.fetch(\n      referralAccount.project\n    );\n\n    const [\n      referralTokenAccountPubKey,\n      [partnerTokenAccount, createPartnerTokenAccountIx],\n      [projectAdminTokenAccount, createProjectAdminTokenAccountIx],\n    ] = await Promise.all([\n      this.getReferralTokenAccountPubKey({\n        referralAccountPubKey,\n        mint,\n      }),\n      getOrCreateATAInstruction(\n        mint,\n        referralAccount.partner,\n        this.connection,\n        undefined,\n        undefined,\n        tokenProgram\n      ),\n      getOrCreateATAInstruction(\n        mint,\n        project.admin,\n        this.connection,\n        undefined,\n        undefined,\n        tokenProgram\n      ),\n    ]);\n\n    let preInstructions: TransactionInstruction[] = [];\n    if (createPartnerTokenAccountIx)\n      preInstructions.push(createPartnerTokenAccountIx);\n    if (createProjectAdminTokenAccountIx)\n      preInstructions.push(createProjectAdminTokenAccountIx);\n\n    return await this.program.methods\n      .claim()\n      .accounts({\n        payer: payerPubKey,\n        project: referralAccount.project,\n        admin: project.admin,\n        projectAdminTokenAccount,\n        referralAccount: referralAccountPubKey,\n        referralTokenAccount: referralTokenAccountPubKey,\n        partner: referralAccount.partner,\n        partnerTokenAccount: partnerTokenAccount,\n        mint,\n      })\n      .preInstructions(preInstructions)\n      .transaction();\n  }\n}\n","export type Referral = {\n  version: \"0.1.0\";\n  name: \"referral\";\n  instructions: [\n    {\n      name: \"initializeProject\";\n      accounts: [\n        {\n          name: \"payer\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"base\";\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: \"admin\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"project\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"systemProgram\";\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: \"params\";\n          type: {\n            defined: \"InitializeProjectParams\";\n          };\n        }\n      ];\n    },\n    {\n      name: \"initializeReferralAccount\";\n      accounts: [\n        {\n          name: \"payer\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"partner\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"project\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"referralAccount\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"systemProgram\";\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: \"params\";\n          type: {\n            defined: \"InitializeReferralAccountParams\";\n          };\n        }\n      ];\n    },\n    {\n      name: \"initializeReferralAccountWithName\";\n      accounts: [\n        {\n          name: \"payer\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"partner\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"project\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"referralAccount\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"systemProgram\";\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: \"params\";\n          type: {\n            defined: \"InitializeReferralAccountWithNameParams\";\n          };\n        }\n      ];\n    },\n    {\n      name: \"updateProject\";\n      accounts: [\n        {\n          name: \"admin\";\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: \"project\";\n          isMut: true;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: \"params\";\n          type: {\n            defined: \"UpdateProjectParams\";\n          };\n        }\n      ];\n    },\n    {\n      name: \"transferProject\";\n      accounts: [\n        {\n          name: \"admin\";\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: \"newAdmin\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"project\";\n          isMut: true;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: \"params\";\n          type: {\n            defined: \"TransferProjectParams\";\n          };\n        }\n      ];\n    },\n    {\n      name: \"updateReferralAccount\";\n      accounts: [\n        {\n          name: \"admin\";\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: \"project\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"referralAccount\";\n          isMut: true;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: \"params\";\n          type: {\n            defined: \"UpdateReferralAccountParams\";\n          };\n        }\n      ];\n    },\n    {\n      name: \"transferReferralAccount\";\n      accounts: [\n        {\n          name: \"partner\";\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: \"newPartner\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"referralAccount\";\n          isMut: true;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: \"params\";\n          type: {\n            defined: \"TransferReferralAccountParams\";\n          };\n        }\n      ];\n    },\n    {\n      name: \"initializeReferralTokenAccount\";\n      accounts: [\n        {\n          name: \"payer\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"project\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"referralAccount\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"referralTokenAccount\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"mint\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"systemProgram\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"tokenProgram\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"rent\";\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [];\n    },\n    {\n      name: \"claim\";\n      accounts: [\n        {\n          name: \"payer\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"project\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"admin\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"projectAdminTokenAccount\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"referralAccount\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"referralTokenAccount\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"partner\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"partnerTokenAccount\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"mint\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"associatedTokenProgram\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"systemProgram\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"tokenProgram\";\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [];\n    }\n  ];\n  accounts: [\n    {\n      name: \"project\";\n      type: {\n        kind: \"struct\";\n        fields: [\n          {\n            name: \"base\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"admin\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"name\";\n            type: \"string\";\n          },\n          {\n            name: \"defaultShareBps\";\n            type: \"u16\";\n          }\n        ];\n      };\n    },\n    {\n      name: \"referralAccount\";\n      type: {\n        kind: \"struct\";\n        fields: [\n          {\n            name: \"partner\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"project\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"shareBps\";\n            type: \"u16\";\n          },\n          {\n            name: \"name\";\n            type: {\n              option: \"string\";\n            };\n          }\n        ];\n      };\n    }\n  ];\n  types: [\n    {\n      name: \"InitializeProjectParams\";\n      type: {\n        kind: \"struct\";\n        fields: [\n          {\n            name: \"name\";\n            type: \"string\";\n          },\n          {\n            name: \"defaultShareBps\";\n            type: \"u16\";\n          }\n        ];\n      };\n    },\n    {\n      name: \"InitializeReferralAccountWithNameParams\";\n      type: {\n        kind: \"struct\";\n        fields: [\n          {\n            name: \"name\";\n            type: \"string\";\n          }\n        ];\n      };\n    },\n    {\n      name: \"InitializeReferralAccountParams\";\n      type: {\n        kind: \"struct\";\n        fields: [];\n      };\n    },\n    {\n      name: \"TransferProjectParams\";\n      type: {\n        kind: \"struct\";\n        fields: [];\n      };\n    },\n    {\n      name: \"TransferReferralAccountParams\";\n      type: {\n        kind: \"struct\";\n        fields: [];\n      };\n    },\n    {\n      name: \"UpdateProjectParams\";\n      type: {\n        kind: \"struct\";\n        fields: [\n          {\n            name: \"name\";\n            type: {\n              option: \"string\";\n            };\n          },\n          {\n            name: \"defaultShareBps\";\n            type: {\n              option: \"u16\";\n            };\n          }\n        ];\n      };\n    },\n    {\n      name: \"UpdateReferralAccountParams\";\n      type: {\n        kind: \"struct\";\n        fields: [\n          {\n            name: \"shareBps\";\n            type: \"u16\";\n          }\n        ];\n      };\n    }\n  ];\n  events: [\n    {\n      name: \"InitializeProjectEvent\";\n      fields: [\n        {\n          name: \"project\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"admin\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"name\";\n          type: \"string\";\n          index: false;\n        },\n        {\n          name: \"defaultShareBps\";\n          type: \"u16\";\n          index: false;\n        }\n      ];\n    },\n    {\n      name: \"UpdateProjectEvent\";\n      fields: [\n        {\n          name: \"project\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"name\";\n          type: \"string\";\n          index: false;\n        },\n        {\n          name: \"defaultShareBps\";\n          type: \"u16\";\n          index: false;\n        }\n      ];\n    },\n    {\n      name: \"InitializeReferralAccountEvent\";\n      fields: [\n        {\n          name: \"project\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"partner\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"referralAccount\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"shareBps\";\n          type: \"u16\";\n          index: false;\n        },\n        {\n          name: \"name\";\n          type: {\n            option: \"string\";\n          };\n          index: false;\n        }\n      ];\n    },\n    {\n      name: \"UpdateReferralAccountEvent\";\n      fields: [\n        {\n          name: \"referralAccount\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"shareBps\";\n          type: \"u16\";\n          index: false;\n        }\n      ];\n    },\n    {\n      name: \"InitializeReferralTokenAccountEvent\";\n      fields: [\n        {\n          name: \"project\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"referralAccount\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"referralTokenAccount\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"mint\";\n          type: \"publicKey\";\n          index: false;\n        }\n      ];\n    },\n    {\n      name: \"ClaimEvent\";\n      fields: [\n        {\n          name: \"project\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"projectAdminTokenAccount\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"referralAccount\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"referralTokenAccount\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"partnerTokenAccount\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"mint\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"referralAmount\";\n          type: \"u64\";\n          index: false;\n        },\n        {\n          name: \"projectAmount\";\n          type: \"u64\";\n          index: false;\n        }\n      ];\n    }\n  ];\n  errors: [\n    {\n      code: 6000;\n      name: \"InvalidCalculation\";\n    },\n    {\n      code: 6001;\n      name: \"InvalidSharePercentage\";\n    },\n    {\n      code: 6002;\n      name: \"NameTooLong\";\n    }\n  ];\n};\n\nexport const IDL: Referral = {\n  version: \"0.1.0\",\n  name: \"referral\",\n  instructions: [\n    {\n      name: \"initializeProject\",\n      accounts: [\n        {\n          name: \"payer\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"base\",\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: \"admin\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"project\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"params\",\n          type: {\n            defined: \"InitializeProjectParams\",\n          },\n        },\n      ],\n    },\n    {\n      name: \"initializeReferralAccount\",\n      accounts: [\n        {\n          name: \"payer\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"partner\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"project\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"referralAccount\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"params\",\n          type: {\n            defined: \"InitializeReferralAccountParams\",\n          },\n        },\n      ],\n    },\n    {\n      name: \"initializeReferralAccountWithName\",\n      accounts: [\n        {\n          name: \"payer\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"partner\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"project\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"referralAccount\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"params\",\n          type: {\n            defined: \"InitializeReferralAccountWithNameParams\",\n          },\n        },\n      ],\n    },\n    {\n      name: \"updateProject\",\n      accounts: [\n        {\n          name: \"admin\",\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: \"project\",\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"params\",\n          type: {\n            defined: \"UpdateProjectParams\",\n          },\n        },\n      ],\n    },\n    {\n      name: \"transferProject\",\n      accounts: [\n        {\n          name: \"admin\",\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: \"newAdmin\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"project\",\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"params\",\n          type: {\n            defined: \"TransferProjectParams\",\n          },\n        },\n      ],\n    },\n    {\n      name: \"updateReferralAccount\",\n      accounts: [\n        {\n          name: \"admin\",\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: \"project\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"referralAccount\",\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"params\",\n          type: {\n            defined: \"UpdateReferralAccountParams\",\n          },\n        },\n      ],\n    },\n    {\n      name: \"transferReferralAccount\",\n      accounts: [\n        {\n          name: \"partner\",\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: \"newPartner\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"referralAccount\",\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"params\",\n          type: {\n            defined: \"TransferReferralAccountParams\",\n          },\n        },\n      ],\n    },\n    {\n      name: \"initializeReferralTokenAccount\",\n      accounts: [\n        {\n          name: \"payer\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"project\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"referralAccount\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"referralTokenAccount\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"mint\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"tokenProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"rent\",\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: \"claim\",\n      accounts: [\n        {\n          name: \"payer\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"project\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"admin\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"projectAdminTokenAccount\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"referralAccount\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"referralTokenAccount\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"partner\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"partnerTokenAccount\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"mint\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"associatedTokenProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"tokenProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  accounts: [\n    {\n      name: \"project\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"base\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"admin\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"name\",\n            type: \"string\",\n          },\n          {\n            name: \"defaultShareBps\",\n            type: \"u16\",\n          },\n        ],\n      },\n    },\n    {\n      name: \"referralAccount\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"partner\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"project\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"shareBps\",\n            type: \"u16\",\n          },\n          {\n            name: \"name\",\n            type: {\n              option: \"string\",\n            },\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: \"InitializeProjectParams\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"name\",\n            type: \"string\",\n          },\n          {\n            name: \"defaultShareBps\",\n            type: \"u16\",\n          },\n        ],\n      },\n    },\n    {\n      name: \"InitializeReferralAccountWithNameParams\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"name\",\n            type: \"string\",\n          },\n        ],\n      },\n    },\n    {\n      name: \"InitializeReferralAccountParams\",\n      type: {\n        kind: \"struct\",\n        fields: [],\n      },\n    },\n    {\n      name: \"TransferProjectParams\",\n      type: {\n        kind: \"struct\",\n        fields: [],\n      },\n    },\n    {\n      name: \"TransferReferralAccountParams\",\n      type: {\n        kind: \"struct\",\n        fields: [],\n      },\n    },\n    {\n      name: \"UpdateProjectParams\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"name\",\n            type: {\n              option: \"string\",\n            },\n          },\n          {\n            name: \"defaultShareBps\",\n            type: {\n              option: \"u16\",\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: \"UpdateReferralAccountParams\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"shareBps\",\n            type: \"u16\",\n          },\n        ],\n      },\n    },\n  ],\n  events: [\n    {\n      name: \"InitializeProjectEvent\",\n      fields: [\n        {\n          name: \"project\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"admin\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"name\",\n          type: \"string\",\n          index: false,\n        },\n        {\n          name: \"defaultShareBps\",\n          type: \"u16\",\n          index: false,\n        },\n      ],\n    },\n    {\n      name: \"UpdateProjectEvent\",\n      fields: [\n        {\n          name: \"project\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"name\",\n          type: \"string\",\n          index: false,\n        },\n        {\n          name: \"defaultShareBps\",\n          type: \"u16\",\n          index: false,\n        },\n      ],\n    },\n    {\n      name: \"InitializeReferralAccountEvent\",\n      fields: [\n        {\n          name: \"project\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"partner\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"referralAccount\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"shareBps\",\n          type: \"u16\",\n          index: false,\n        },\n        {\n          name: \"name\",\n          type: {\n            option: \"string\",\n          },\n          index: false,\n        },\n      ],\n    },\n    {\n      name: \"UpdateReferralAccountEvent\",\n      fields: [\n        {\n          name: \"referralAccount\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"shareBps\",\n          type: \"u16\",\n          index: false,\n        },\n      ],\n    },\n    {\n      name: \"InitializeReferralTokenAccountEvent\",\n      fields: [\n        {\n          name: \"project\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"referralAccount\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"referralTokenAccount\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"mint\",\n          type: \"publicKey\",\n          index: false,\n        },\n      ],\n    },\n    {\n      name: \"ClaimEvent\",\n      fields: [\n        {\n          name: \"project\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"projectAdminTokenAccount\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"referralAccount\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"referralTokenAccount\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"partnerTokenAccount\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"mint\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"referralAmount\",\n          type: \"u64\",\n          index: false,\n        },\n        {\n          name: \"projectAmount\",\n          type: \"u64\",\n          index: false,\n        },\n      ],\n    },\n  ],\n  errors: [\n    {\n      code: 6000,\n      name: \"InvalidCalculation\",\n    },\n    {\n      code: 6001,\n      name: \"InvalidSharePercentage\",\n    },\n    {\n      code: 6002,\n      name: \"NameTooLong\",\n    },\n  ],\n};\n","import { PublicKey } from \"@solana/web3.js\";\n\nexport type Cluster = \"mainnet-beta\" | \"devnet\" | \"localnet\";\n\nexport const PROGRAM_ID_BY_CLUSTER: { [key in Cluster]: PublicKey } = {\n  localnet: new PublicKey(\"9vhgK3i91cTwTHQag85zoA3PmJUTfgvgYFc9AJPRNhGn\"),\n  devnet: new PublicKey(\"9vhgK3i91cTwTHQag85zoA3PmJUTfgvgYFc9AJPRNhGn\"),\n  \"mainnet-beta\": new PublicKey(\"REFER4ZgmyYx9c6He5XfaTMiGfdLwRnkV4RPp9t9iF3\"),\n};\n","import {\n  createAssociatedTokenAccountInstruction,\n  createCloseAccountInstruction,\n  createSyncNativeInstruction,\n  getAssociatedTokenAddress,\n  NATIVE_MINT,\n  TOKEN_PROGRAM_ID,\n} from \"@solana/spl-token\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { BN } from \"@coral-xyz/anchor\";\n\nexport const getOrCreateATAInstruction = async (\n  tokenMint: PublicKey,\n  owner: PublicKey,\n  connection: Connection,\n  payer: PublicKey = owner,\n  allowOwnerOffCurve = true,\n  tokenProgram: PublicKey = TOKEN_PROGRAM_ID\n): Promise<[PublicKey, TransactionInstruction?]> => {\n  let toAccount;\n  try {\n    toAccount = await getAssociatedTokenAddress(\n      tokenMint,\n      owner,\n      allowOwnerOffCurve,\n      tokenProgram\n    );\n    const account = await connection.getAccountInfo(toAccount);\n\n    if (!account) {\n      const ix = createAssociatedTokenAccountInstruction(\n        payer,\n        toAccount,\n        owner,\n        tokenMint,\n        tokenProgram\n      );\n      return [toAccount, ix];\n    }\n    return [toAccount, undefined];\n  } catch (e) {\n    /* handle error */\n    console.error(\"Error::getOrCreateATAInstruction\", e);\n    throw e;\n  }\n};\n\nexport const wrapSolInstuction = (\n  from: PublicKey,\n  to: PublicKey,\n  amount: BN\n): TransactionInstruction[] => {\n  return [\n    SystemProgram.transfer({\n      fromPubkey: from,\n      toPubkey: to,\n      lamports: amount.toNumber(),\n    }),\n    createSyncNativeInstruction(to),\n  ];\n};\n\nexport const unwrapSOLInstruction = async (\n  owner: PublicKey\n): Promise<TransactionInstruction> => {\n  const wSolATAAccount = await getAssociatedTokenAddress(NATIVE_MINT, owner);\n\n  return createCloseAccountInstruction(wSolATAAccount, owner, owner);\n};\n","import { GetProgramAccountsFilter, PublicKey } from \"@solana/web3.js\";\n\nexport const projectAdminFilter = (publicKey: PublicKey) => {\n  return {\n    memcmp: {\n      offset: 8 + 32,\n      bytes: publicKey.toBase58(),\n    },\n  };\n};\n\nexport const referralAccountPartnerFilter = (\n  publicKey: PublicKey\n): GetProgramAccountsFilter => {\n  return {\n    memcmp: {\n      offset: 8,\n      bytes: publicKey.toBase58(),\n    },\n  };\n};\n\nexport const referralAccountProjectFilter = (\n  publicKey: PublicKey\n): GetProgramAccountsFilter => {\n  return {\n    memcmp: {\n      offset: 8 + 32,\n      bytes: publicKey.toBase58(),\n    },\n  };\n};\n"]}