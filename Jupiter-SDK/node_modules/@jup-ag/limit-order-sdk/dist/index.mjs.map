{"version":3,"sources":["../src/limitOrder.ts","../src/idl.ts","../src/utils.ts","../src/constant.ts","../src/trpc.ts","../src/getOrderFilter.ts"],"sourcesContent":["import { AnchorProvider, Program, BN, IdlAccounts } from \"@coral-xyz/anchor\";\nimport { IDL, LimitOrder } from \"./idl\";\nimport {\n  Connection,\n  PublicKey,\n  Transaction,\n  TransactionInstruction,\n  GetProgramAccountsFilter,\n} from \"@solana/web3.js\";\nimport { NATIVE_MINT } from \"@solana/spl-token\";\nimport { getOrCreateATAInstruction } from \"./utils\";\nimport {\n  Cluster,\n  LIMIT_ORDER_REFERRAL,\n  PROGRAM_ID_BY_CLUSTER,\n} from \"./constant\";\nimport { client } from \"./trpc\";\nimport { OrderHistoryItem, TradeHistoryItem } from \"@jup-ag/limit-order-trpc\";\nimport {\n  ReferralProvider,\n  PROGRAM_ID_BY_CLUSTER as REFERRAL_PROGRAM_ID_BY_CLUSTER,\n} from \"@jup-ag/referral-sdk\";\n\nexport type { OrderHistoryItem, TradeHistoryItem };\n\nexport type Order = IdlAccounts<LimitOrder>[\"order\"];\n\nexport interface CreateOrderParams {\n  owner: PublicKey;\n  inputMint: PublicKey;\n  inAmount: BN;\n  outputMint: PublicKey;\n  outAmount: BN;\n  base: PublicKey;\n  expiredAt?: BN | null;\n}\n\nexport interface CancelOrderParams {\n  owner: PublicKey;\n  orderPubKey: PublicKey;\n}\n\nexport interface BatchCancelOrderParams {\n  owner: PublicKey;\n  ordersPubKey: PublicKey[];\n}\n\nexport interface CancelExpiredOrderParams {\n  orderPubKey: PublicKey;\n}\n\nexport interface BatchCancelExpiredOrderParams {\n  ordersPubKey: PublicKey[];\n}\n\nexport interface FillOrderParams {\n  owner: PublicKey;\n  orderAccount: { publicKey: PublicKey; account: Order };\n  amount: BN;\n  expectedOutAmount: BN;\n}\n\nconst MAX_CANCELLATION = 10;\n\nexport class LimitOrderProvider {\n  private program: Program<LimitOrder>;\n  private connection: Connection;\n  private referralAccount: PublicKey;\n  private referralName: string;\n  private referralProvider: ReferralProvider;\n\n  constructor(\n    connection: Connection,\n    referralAccount: PublicKey = null,\n    referralName: string = null,\n    cluster: Cluster = \"mainnet-beta\"\n  ) {\n    this.referralAccount = referralAccount;\n    this.referralName = referralName;\n    this.connection = connection;\n    this.referralProvider = new ReferralProvider(connection);\n\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n\n    this.program = new Program(IDL, PROGRAM_ID_BY_CLUSTER[cluster], provider);\n  }\n\n  public async getOrder(pubkey: PublicKey): Promise<Order> {\n    return await this.program.account.order.fetch(pubkey);\n  }\n\n  public async getOrders(\n    filters: GetProgramAccountsFilter[] = []\n  ): Promise<{ publicKey: PublicKey; account: Order }[]> {\n    return await this.program.account.order.all(filters);\n  }\n\n  public getOrderPubkey(base: PublicKey) {\n    return PublicKey.findProgramAddressSync(\n      [Buffer.from(\"order\"), base.toBuffer()],\n      PROGRAM_ID_BY_CLUSTER[\"mainnet-beta\"]\n    )[0];\n  }\n\n  public async getOrderHistoryCount({\n    wallet,\n  }: {\n    wallet: string;\n  }): Promise<number> {\n    return await client.orderHistoryCount.query({ wallet });\n  }\n\n  public async getOrderHistory({\n    wallet,\n    lastCursor,\n    take,\n  }: {\n    wallet: string;\n    lastCursor?: number;\n    take?: number;\n  }): Promise<OrderHistoryItem[]> {\n    return await client.orderHistory.query({\n      wallet,\n      cursor: lastCursor,\n      take,\n    });\n  }\n\n  public async getTradeHistoryCount({\n    wallet,\n  }: {\n    wallet: string;\n  }): Promise<number> {\n    return await client.tradeHistoryCount.query({ wallet });\n  }\n\n  public async getTradeHistory({\n    wallet,\n    lastCursor,\n    take,\n  }: {\n    wallet: string;\n    lastCursor?: number;\n    take?: number;\n  }): Promise<TradeHistoryItem[]> {\n    return await client.tradeHistory.query({\n      wallet,\n      cursor: lastCursor,\n      take,\n    });\n  }\n\n  public async createOrder({\n    owner,\n    inputMint,\n    outputMint,\n    outAmount,\n    inAmount,\n    base,\n    expiredAt = null,\n  }: CreateOrderParams): Promise<{\n    tx: Transaction;\n    orderPubKey: PublicKey;\n  }> {\n    const orderPubKey = this.getOrderPubkey(base);\n\n    const [reservePubKey] = PublicKey.findProgramAddressSync(\n      [Buffer.from(\"reserve\"), orderPubKey.toBuffer()],\n      this.program.programId\n    );\n\n    let preInstructions: TransactionInstruction[] = [];\n\n    const inputMintAccount = await this.connection.getAccountInfo(inputMint);\n    const outputMintAccount = await this.connection.getAccountInfo(outputMint);\n\n    let [\n      [inputAccount, createInputAccountIx],\n      [outputAccount, createOutputAccountIx],\n    ] = await Promise.all([\n      getOrCreateATAInstruction(\n        inputMint,\n        owner,\n        this.connection,\n        undefined,\n        undefined,\n        inputMintAccount.owner\n      ),\n      getOrCreateATAInstruction(\n        outputMint,\n        owner,\n        this.connection,\n        undefined,\n        undefined,\n        outputMintAccount.owner\n      ),\n    ]);\n\n    if (inputMint.equals(NATIVE_MINT)) {\n      inputAccount = outputAccount;\n    } else {\n      if (createInputAccountIx) preInstructions.push(createInputAccountIx);\n    }\n\n    if (outputMint.equals(NATIVE_MINT)) {\n      outputAccount = inputAccount;\n    } else {\n      if (createOutputAccountIx) preInstructions.push(createOutputAccountIx);\n    }\n\n    let referral: PublicKey = null;\n\n    if (this.referralAccount) {\n      const referralAccountPubKey = this.getReferralAccountPubKey();\n\n      const referralTokenAccount =\n        this.referralProvider.getReferralTokenAccountPubKey({\n          mint: outputMint,\n          referralAccountPubKey,\n        });\n\n      const account = await this.connection.getAccountInfo(\n        referralTokenAccount\n      );\n\n      if (account) {\n        referral = referralTokenAccount;\n      }\n    }\n\n    const tx = await this.program.methods\n      .initializeOrder(inAmount, outAmount, expiredAt)\n      .accounts({\n        maker: owner,\n        makerInputAccount: inputAccount,\n        inputMint: inputMint,\n        makerOutputAccount: outputAccount,\n        outputMint: outputMint,\n        order: orderPubKey,\n        reserve: reservePubKey,\n        referral,\n        base: base,\n        tokenProgram: inputMintAccount.owner,\n      })\n      .preInstructions(preInstructions)\n      .transaction();\n\n    return { tx, orderPubKey };\n  }\n\n  public async cancelOrderInstruction({\n    owner,\n    orderPubKey,\n  }: CancelOrderParams): Promise<TransactionInstruction[]> {\n    const order = await this.program.account.order.fetch(orderPubKey);\n\n    let preInstructions: TransactionInstruction[] = [];\n\n    const mintAccount = await this.connection.getAccountInfo(order.inputMint);\n\n    const [inputAccount, createInputAccountIx] =\n      await getOrCreateATAInstruction(\n        order.inputMint,\n        owner,\n        this.connection,\n        undefined,\n        undefined,\n        mintAccount.owner\n      );\n\n    if (createInputAccountIx && !order.inputMint.equals(NATIVE_MINT))\n      preInstructions.push(createInputAccountIx);\n\n    const instruction = await this.program.methods\n      .cancelOrder()\n      .accounts({\n        maker: owner,\n        makerInputAccount: inputAccount,\n        reserve: order.reserve,\n        order: orderPubKey,\n        tokenProgram: mintAccount.owner,\n        inputMint: order.inputMint,\n      })\n      .instruction();\n\n    return [...preInstructions, instruction];\n  }\n\n  public async cancelOrder({\n    owner,\n    orderPubKey,\n  }: CancelOrderParams): Promise<Transaction> {\n    const ixs = await this.cancelOrderInstruction({ owner, orderPubKey });\n    return new Transaction().add(...ixs);\n  }\n\n  public async batchCancelOrder({\n    owner,\n    ordersPubKey,\n  }: BatchCancelOrderParams): Promise<Transaction> {\n    if (ordersPubKey.length > MAX_CANCELLATION)\n      throw `ordersPubKey lenght exceed ${MAX_CANCELLATION}`;\n\n    const ixs = await Promise.all(\n      ordersPubKey.map((orderPubKey) =>\n        this.cancelOrderInstruction({ owner, orderPubKey })\n      )\n    );\n    return new Transaction().add(...ixs.flat());\n  }\n\n  public async cancelExpiredOrderInstruction({\n    orderPubKey,\n  }: CancelExpiredOrderParams): Promise<TransactionInstruction | null> {\n    const order = await this.program.account.order.fetch(orderPubKey);\n\n    const mintAccount = await this.connection.getAccountInfo(order.inputMint);\n\n    const [inputAccount, createInputAccountIx] =\n      await getOrCreateATAInstruction(\n        order.inputMint,\n        order.maker,\n        this.connection,\n        undefined,\n        undefined,\n        mintAccount.owner\n      );\n\n    if (createInputAccountIx && !order.inputMint.equals(NATIVE_MINT)) {\n      return null;\n    }\n\n    return await this.program.methods\n      .cancelExpiredOrder()\n      .accounts({\n        order: orderPubKey,\n        reserve: order.reserve,\n        maker: order.maker,\n        makerInputAccount: inputAccount,\n        tokenProgram: mintAccount.owner,\n        inputMint: order.inputMint,\n      })\n      .instruction();\n  }\n\n  public async cancelExpiredOrder({\n    orderPubKey,\n  }: CancelExpiredOrderParams): Promise<Transaction | null> {\n    const ix = await this.cancelExpiredOrderInstruction({ orderPubKey });\n    if (ix) {\n      return new Transaction().add(ix);\n    } else {\n      return null;\n    }\n  }\n\n  public async batchCancelExpiredOrder({\n    ordersPubKey,\n  }: BatchCancelExpiredOrderParams): Promise<Transaction> {\n    if (ordersPubKey.length > MAX_CANCELLATION)\n      throw `ordersPubKey lenght exceed ${MAX_CANCELLATION}`;\n\n    const ixs = await Promise.all(\n      ordersPubKey.map((orderPubKey) =>\n        this.cancelExpiredOrderInstruction({ orderPubKey })\n      )\n    );\n    const filteredIxs = ixs.filter(Boolean);\n\n    if (filteredIxs.length > 0) {\n      return new Transaction().add(...filteredIxs);\n    } else {\n      return null;\n    }\n  }\n\n  public async fillOrder({\n    owner,\n    orderAccount,\n    amount,\n    expectedOutAmount,\n  }: FillOrderParams): Promise<Transaction> {\n    const { account: order, publicKey } = orderAccount;\n    let preInstructions: TransactionInstruction[] = [];\n\n    let [feeAuthority] = await PublicKey.findProgramAddressSync(\n      [Buffer.from(\"fee\")],\n      this.program.programId\n    );\n\n    let makerOutputAccount = order.makerOutputAccount;\n\n    let [\n      [_, createMakerOutputAccountIx],\n      [takerInputAccount, createTakerInputAccountIx],\n      [takerOutputAccount, createOutputAccountIx],\n      [programFeeAccount, programFeeAccountIx],\n    ] = await Promise.all([\n      getOrCreateATAInstruction(\n        order.outputMint,\n        order.maker,\n        this.connection,\n        owner\n      ),\n      getOrCreateATAInstruction(order.outputMint, owner, this.connection),\n      getOrCreateATAInstruction(order.inputMint, owner, this.connection),\n      getOrCreateATAInstruction(\n        order.outputMint,\n        feeAuthority,\n        this.connection,\n        owner\n      ),\n    ]);\n\n    if (order.inputMint.toString() === NATIVE_MINT.toString()) {\n      takerOutputAccount = owner;\n    } else {\n      if (createOutputAccountIx) preInstructions.push(createOutputAccountIx);\n    }\n\n    if (order.outputMint.toString() === NATIVE_MINT.toString()) {\n      takerInputAccount = owner;\n      makerOutputAccount = order.maker;\n    } else {\n      if (createMakerOutputAccountIx)\n        preInstructions.push(createMakerOutputAccountIx);\n      if (createTakerInputAccountIx)\n        preInstructions.push(createTakerInputAccountIx);\n    }\n\n    if (programFeeAccountIx) preInstructions.push(programFeeAccountIx);\n\n    const tx = await this.program.methods\n      .fillOrder(amount, expectedOutAmount)\n      .accounts({\n        order: publicKey,\n        reserve: order.reserve,\n        maker: order.maker,\n        taker: owner,\n        makerOutputAccount,\n        takerInputAccount,\n        takerOutputAccount,\n        programFeeAccount,\n        referral: order.referral,\n        feeAuthority,\n      })\n      .preInstructions(preInstructions)\n      .transaction();\n\n    return tx;\n  }\n\n  public async createReferralAccount(payerPubKey: PublicKey) {\n    if (!this.referralAccount) throw \"Referral is missing\";\n    if (!this.referralName) throw \"Name is missing\";\n\n    return await this.referralProvider.initializeReferralAccountWithName({\n      projectPubKey: LIMIT_ORDER_REFERRAL,\n      partnerPubKey: this.referralAccount,\n      name: this.referralName,\n      payerPubKey,\n    });\n  }\n\n  public async createReferralTokenAccount(\n    mint: PublicKey,\n    payerPubKey: PublicKey\n  ) {\n    if (!this.referralAccount) throw \"Referral is missing\";\n    const referralAccountPubKey = this.getReferralAccountPubKey();\n\n    const referralAccount = await this.referralProvider.getReferralAccount(\n      referralAccountPubKey\n    );\n    if (!referralAccount) throw \"Referral account already exists\";\n\n    const mintAccount = await this.connection.getAccountInfo(mint);\n\n    return this.referralProvider.initializeReferralTokenAccount({\n      mint: mint,\n      payerPubKey,\n      referralAccountPubKey,\n      tokenProgram: mintAccount.owner,\n    });\n  }\n\n  public async claimReferral(mint: PublicKey, payerPubKey: PublicKey) {\n    if (!this.referralAccount) throw \"Referral is missing\";\n    const referralAccountPubKey = this.getReferralAccountPubKey();\n\n    const referralAccount = await this.referralProvider.getReferralAccount(\n      referralAccountPubKey\n    );\n    if (!referralAccount) throw \"Referral account already exists\";\n\n    const mintAccount = await this.connection.getAccountInfo(mint);\n\n    return await this.referralProvider.claim({\n      mint: mint,\n      referralAccountPubKey,\n      payerPubKey,\n      tokenProgram: mintAccount.owner,\n    });\n  }\n\n  getReferralAccountPubKey() {\n    if (!this.referralName) {\n      const [referralAccountPubKey] = PublicKey.findProgramAddressSync(\n        [\n          Buffer.from(\"referral\"),\n          LIMIT_ORDER_REFERRAL.toBuffer(),\n          this.referralAccount.toBuffer(),\n        ],\n        REFERRAL_PROGRAM_ID_BY_CLUSTER[\"mainnet-beta\"]\n      );\n\n      return referralAccountPubKey;\n    } else {\n      return this.referralProvider.getReferralAccountWithNamePubKey({\n        projectPubKey: LIMIT_ORDER_REFERRAL,\n        name: this.referralName,\n      });\n    }\n  }\n}\n","export type LimitOrder = {\n  \"version\": \"0.1.0\",\n  \"name\": \"limit_order\",\n  \"instructions\": [\n    {\n      \"name\": \"initializeOrder\",\n      \"accounts\": [\n        {\n          \"name\": \"base\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"maker\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"order\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserve\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK\"\n          ]\n        },\n        {\n          \"name\": \"makerInputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"inputMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"makerOutputAccount\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"referral\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"outputMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"rent\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"makingAmount\",\n          \"type\": \"u64\"\n        },\n        {\n          \"name\": \"takingAmount\",\n          \"type\": \"u64\"\n        },\n        {\n          \"name\": \"expiredAt\",\n          \"type\": {\n            \"option\": \"i64\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"fillOrder\",\n      \"accounts\": [\n        {\n          \"name\": \"order\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserve\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"maker\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"taker\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"takerOutputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"makerOutputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"takerInputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"feeAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"programFeeAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"referral\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"makingAmount\",\n          \"type\": \"u64\"\n        },\n        {\n          \"name\": \"maxTakingAmount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"cancelOrder\",\n      \"accounts\": [\n        {\n          \"name\": \"order\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserve\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK\"\n          ]\n        },\n        {\n          \"name\": \"maker\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"makerInputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK, it is not important if it is sol input mint\"\n          ]\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"inputMint\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"isOptional\": true\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"cancelExpiredOrder\",\n      \"accounts\": [\n        {\n          \"name\": \"order\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserve\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK\"\n          ]\n        },\n        {\n          \"name\": \"maker\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"makerInputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK, it is not important if it is sol input mint\"\n          ]\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"inputMint\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"isOptional\": true\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"withdrawFee\",\n      \"accounts\": [\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"feeAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK\"\n          ]\n        },\n        {\n          \"name\": \"programFeeAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"adminTokenAcocunt\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"mint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        }\n      ]\n    }\n  ],\n  \"accounts\": [\n    {\n      \"name\": \"order\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maker\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"inputMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"outputMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"waiting\",\n            \"type\": \"bool\"\n          },\n          {\n            \"name\": \"oriMakingAmount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"oriTakingAmount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"makingAmount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"takingAmount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"makerInputAccount\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"makerOutputAccount\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"reserve\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"uid\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"expiredAt\",\n            \"type\": {\n              \"option\": \"i64\"\n            }\n          },\n          {\n            \"name\": \"base\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"referral\",\n            \"type\": {\n              \"option\": \"publicKey\"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"events\": [\n    {\n      \"name\": \"TradeEvent\",\n      \"fields\": [\n        {\n          \"name\": \"orderKey\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"taker\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"remainingInAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"remainingOutAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"inAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"outAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"CancelOrderEvent\",\n      \"fields\": [\n        {\n          \"name\": \"orderKey\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"CreateOrderEvent\",\n      \"fields\": [\n        {\n          \"name\": \"orderKey\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"maker\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"inputMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"outputMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"inAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"outAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"expiredAt\",\n          \"type\": {\n            \"option\": \"i64\"\n          },\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"Fee\",\n      \"fields\": [\n        {\n          \"name\": \"orderKey\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    }\n  ],\n  \"errors\": [\n    {\n      \"code\": 6000,\n      \"name\": \"InvalidMakingAmount\"\n    },\n    {\n      \"code\": 6001,\n      \"name\": \"InvalidTakingAmount\"\n    },\n    {\n      \"code\": 6002,\n      \"name\": \"InvalidMaxTakingAmount\"\n    },\n    {\n      \"code\": 6003,\n      \"name\": \"InvalidCalculation\"\n    },\n    {\n      \"code\": 6004,\n      \"name\": \"InvalidInputAccount\"\n    },\n    {\n      \"code\": 6005,\n      \"name\": \"InvalidOutputAccount\"\n    },\n    {\n      \"code\": 6006,\n      \"name\": \"InvalidPair\"\n    },\n    {\n      \"code\": 6007,\n      \"name\": \"MissingReferral\"\n    },\n    {\n      \"code\": 6008,\n      \"name\": \"OrderExpired\"\n    },\n    {\n      \"code\": 6009,\n      \"name\": \"OrderNotExpired\"\n    }\n  ]\n};\n\nexport const IDL: LimitOrder = {\n  \"version\": \"0.1.0\",\n  \"name\": \"limit_order\",\n  \"instructions\": [\n    {\n      \"name\": \"initializeOrder\",\n      \"accounts\": [\n        {\n          \"name\": \"base\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"maker\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"order\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserve\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK\"\n          ]\n        },\n        {\n          \"name\": \"makerInputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"inputMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"makerOutputAccount\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"referral\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"outputMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"rent\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"makingAmount\",\n          \"type\": \"u64\"\n        },\n        {\n          \"name\": \"takingAmount\",\n          \"type\": \"u64\"\n        },\n        {\n          \"name\": \"expiredAt\",\n          \"type\": {\n            \"option\": \"i64\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"fillOrder\",\n      \"accounts\": [\n        {\n          \"name\": \"order\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserve\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"maker\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"taker\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"takerOutputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"makerOutputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"takerInputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"feeAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"programFeeAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"referral\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"makingAmount\",\n          \"type\": \"u64\"\n        },\n        {\n          \"name\": \"maxTakingAmount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"cancelOrder\",\n      \"accounts\": [\n        {\n          \"name\": \"order\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserve\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK\"\n          ]\n        },\n        {\n          \"name\": \"maker\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"makerInputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK, it is not important if it is sol input mint\"\n          ]\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"inputMint\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"isOptional\": true\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"cancelExpiredOrder\",\n      \"accounts\": [\n        {\n          \"name\": \"order\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserve\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK\"\n          ]\n        },\n        {\n          \"name\": \"maker\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"makerInputAccount\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK, it is not important if it is sol input mint\"\n          ]\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"inputMint\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"isOptional\": true\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"withdrawFee\",\n      \"accounts\": [\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"feeAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"docs\": [\n            \"CHECK\"\n          ]\n        },\n        {\n          \"name\": \"programFeeAccount\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"adminTokenAcocunt\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"mint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        }\n      ]\n    }\n  ],\n  \"accounts\": [\n    {\n      \"name\": \"order\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maker\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"inputMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"outputMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"waiting\",\n            \"type\": \"bool\"\n          },\n          {\n            \"name\": \"oriMakingAmount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"oriTakingAmount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"makingAmount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"takingAmount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"makerInputAccount\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"makerOutputAccount\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"reserve\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"uid\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"expiredAt\",\n            \"type\": {\n              \"option\": \"i64\"\n            }\n          },\n          {\n            \"name\": \"base\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"referral\",\n            \"type\": {\n              \"option\": \"publicKey\"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"events\": [\n    {\n      \"name\": \"TradeEvent\",\n      \"fields\": [\n        {\n          \"name\": \"orderKey\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"taker\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"remainingInAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"remainingOutAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"inAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"outAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"CancelOrderEvent\",\n      \"fields\": [\n        {\n          \"name\": \"orderKey\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"CreateOrderEvent\",\n      \"fields\": [\n        {\n          \"name\": \"orderKey\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"maker\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"inputMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"outputMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"inAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"outAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"expiredAt\",\n          \"type\": {\n            \"option\": \"i64\"\n          },\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"Fee\",\n      \"fields\": [\n        {\n          \"name\": \"orderKey\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    }\n  ],\n  \"errors\": [\n    {\n      \"code\": 6000,\n      \"name\": \"InvalidMakingAmount\"\n    },\n    {\n      \"code\": 6001,\n      \"name\": \"InvalidTakingAmount\"\n    },\n    {\n      \"code\": 6002,\n      \"name\": \"InvalidMaxTakingAmount\"\n    },\n    {\n      \"code\": 6003,\n      \"name\": \"InvalidCalculation\"\n    },\n    {\n      \"code\": 6004,\n      \"name\": \"InvalidInputAccount\"\n    },\n    {\n      \"code\": 6005,\n      \"name\": \"InvalidOutputAccount\"\n    },\n    {\n      \"code\": 6006,\n      \"name\": \"InvalidPair\"\n    },\n    {\n      \"code\": 6007,\n      \"name\": \"MissingReferral\"\n    },\n    {\n      \"code\": 6008,\n      \"name\": \"OrderExpired\"\n    },\n    {\n      \"code\": 6009,\n      \"name\": \"OrderNotExpired\"\n    }\n  ]\n};\n","import {\n  TOKEN_PROGRAM_ID,\n  createAssociatedTokenAccountInstruction,\n  getAssociatedTokenAddress,\n} from \"@solana/spl-token\";\nimport { Connection, PublicKey, TransactionInstruction } from \"@solana/web3.js\";\n\nexport const getOrCreateATAInstruction = async (\n  tokenMint: PublicKey,\n  owner: PublicKey,\n  connection: Connection,\n  payer: PublicKey = owner,\n  allowOwnerOffCurve = true,\n  programId: PublicKey = TOKEN_PROGRAM_ID\n): Promise<[PublicKey, TransactionInstruction?]> => {\n  let toAccount;\n  try {\n    toAccount = await getAssociatedTokenAddress(\n      tokenMint,\n      owner,\n      allowOwnerOffCurve,\n      programId\n    );\n    const account = await connection.getAccountInfo(toAccount);\n\n    if (!account) {\n      const ix = createAssociatedTokenAccountInstruction(\n        payer,\n        toAccount,\n        owner,\n        tokenMint,\n        programId\n      );\n      return [toAccount, ix];\n    }\n    return [toAccount, undefined];\n  } catch (e) {\n    /* handle error */\n    console.error(\"Error::getOrCreateATAInstruction\", e);\n    throw e;\n  }\n};\n","import { PublicKey } from \"@solana/web3.js\";\n\nexport type Cluster = \"mainnet-beta\" | \"devnet\" | \"localnet\";\n\nexport const PROGRAM_ID_BY_CLUSTER: { [key in Cluster]: PublicKey } = {\n  localnet: new PublicKey(\"APpKbNFPVs3tpkMsKCHJCdD1uKiTH57KYXj6RQnqY1Fu\"),\n  devnet: new PublicKey(\"A785JfFMTxGPvmij7dC5GvqLFujJuFTdytnPMQf4Txuw\"),\n  \"mainnet-beta\": new PublicKey(\"jupoNjAxXgZ4rjzxzPMP4oxduvQsQtZzyknqvzYNrNu\"),\n};\n\nexport const LIMIT_ORDER_REFERRAL = new PublicKey(\n  \"45ruCyfdRkWpRNGEqWzjCiXRHkZs8WXCLQ67Pnpye7Hp\"\n);\n","import type { ServerRouter } from \"@jup-ag/limit-order-trpc\";\nimport { createTRPCProxyClient, httpBatchLink } from \"@trpc/client\";\nimport superjson from \"superjson\";\n// @trpc/server is import here because of this typescript error\n// https://github.com/microsoft/TypeScript/issues/47663\nimport {} from \"@trpc/server\";\n\nexport const client = createTRPCProxyClient<ServerRouter>({\n  links: [\n    httpBatchLink({\n      url: \"https://jup.ag/api/trpc\",\n    }),\n  ],\n  transformer: superjson,\n});\n","import { GetProgramAccountsFilter, PublicKey } from \"@solana/web3.js\";\n\nexport const ownerFilter = (publicKey: PublicKey) => {\n  return {\n    memcmp: {\n      offset: 8,\n      bytes: publicKey.toBase58(),\n    },\n  };\n};\n\nexport const waitingFilter = (waiting: Boolean): GetProgramAccountsFilter => {\n  return {\n    memcmp: {\n      offset: 8 + 3 * 32,\n      bytes: waiting ? \"2\" : \"1\",\n    },\n  };\n};\n\nexport const inputMintFilter = (\n  publicKey: PublicKey\n): GetProgramAccountsFilter => {\n  return {\n    memcmp: {\n      offset: 8 + 32,\n      bytes: publicKey.toBase58(),\n    },\n  };\n};\n\nexport const outputMintFilter = (\n  publicKey: PublicKey\n): GetProgramAccountsFilter => {\n  return {\n    memcmp: {\n      offset: 8 + 2 * 32,\n      bytes: publicKey.toBase58(),\n    },\n  };\n};\n"],"mappings":"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","names":["PublicKey","PublicKey"]}